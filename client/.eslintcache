[{"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\index.js":"1","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\reportWebVitals.js":"2","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\App.js":"3","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\About\\index.js":"4","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\LogIn\\index.js":"5","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\SignUp\\index.js":"6","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\SingleMessage\\index.js":"7","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\index.js":"8","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\MessageBox\\index.js":"9","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\Footer\\index.js":"10","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\index.js":"11","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\Header\\index.js":"12","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\auth.js":"13","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\mutations.js":"14","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\queries.js":"15","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\ResponseForm\\index.js":"16","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\ProductCard\\index.js":"17","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\Wrapper\\index.js":"18","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\ResponseList\\index.js":"19","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\MessageList\\index.js":"20","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\MessageForm\\index.js":"21","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\Wrapper\\index.js":"22","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\ProductOptionsCard\\index.js":"23"},{"size":500,"mtime":1642565938925,"results":"24","hashOfConfig":"25"},{"size":362,"mtime":1642565938932,"results":"26","hashOfConfig":"25"},{"size":2501,"mtime":1642644691252,"results":"27","hashOfConfig":"25"},{"size":1282,"mtime":1642648153424,"results":"28","hashOfConfig":"25"},{"size":2590,"mtime":1642644691318,"results":"29","hashOfConfig":"25"},{"size":2784,"mtime":1642644691317,"results":"30","hashOfConfig":"25"},{"size":1600,"mtime":1642658917914,"results":"31","hashOfConfig":"25"},{"size":1453,"mtime":1642662593759,"results":"32","hashOfConfig":"25"},{"size":1025,"mtime":1642644691317,"results":"33","hashOfConfig":"25"},{"size":877,"mtime":1642644691326,"results":"34","hashOfConfig":"25"},{"size":1562,"mtime":1642644691319,"results":"35","hashOfConfig":"25"},{"size":1763,"mtime":1642658518151,"results":"36","hashOfConfig":"25"},{"size":1043,"mtime":1642565938933,"results":"37","hashOfConfig":"25"},{"size":1880,"mtime":1642644691263,"results":"38","hashOfConfig":"25"},{"size":1533,"mtime":1642644691264,"results":"39","hashOfConfig":"25"},{"size":2648,"mtime":1642644691255,"results":"40","hashOfConfig":"25"},{"size":780,"mtime":1642644691261,"results":"41","hashOfConfig":"25"},{"size":225,"mtime":1642644691261,"results":"42","hashOfConfig":"25"},{"size":1078,"mtime":1642644691256,"results":"43","hashOfConfig":"25"},{"size":1756,"mtime":1642663586512,"results":"44","hashOfConfig":"25"},{"size":2974,"mtime":1642644691325,"results":"45","hashOfConfig":"25"},{"size":231,"mtime":1642644691320,"results":"46","hashOfConfig":"25"},{"size":745,"mtime":1642644691322,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"jjulsm",{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"50"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84","usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"50"},{"filePath":"96","messages":"97","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\index.js",[],["100","101"],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\reportWebVitals.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\App.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\About\\index.js",["102"],"import React from \"react\";\n//this is the About Page which will render on click of both the company name and the \"home\" item in the nav bar\"\nconst About = () => (\n  <div>\n    <h1>About</h1>\n      <div>\n        {/* IceBox feature */}\n        {/* <img src = \"\" alt=\"\">PICTURE OF ME</img> */}\n        Welcome to Crockett Printing, Your One Stop Print Shop! We are a small local business located in Crockett, TX, with all your printing and design needs. Please contact us below or meet us in person. \n      </div>\n      <div className=\"intro\">\n        \n      </div>\n    <h3 className=\"contact\">Contact Us</h3>\n      <div>\n        <p>\n          Phone: (936) 544-7661\n        </p>\n        <p>\n          Email: <a href=\"mailto:crockettprinting@gmail.com\">crockettprinting@gmail.com</a>\n        </p>\n        \n      </div>\n    <h3>Location</h3>\n      <div>We are located at 520 E Goliad Ave, Crockett, TX 75835</div>\n      <div>\n      <iframe src=\"https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d1013.3486178316411!2d-95.45677703326342!3d31.317979568567285!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x8647c338118e1b5b%3A0xe413298bb39a679a!2sCrockett%20Printing%20Company!5e0!3m2!1sen!2sus!4v1642646965310!5m2!1sen!2sus\"></iframe>\n      </div>\n  </div>\n);\n\nexport default About;\n","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\LogIn\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\SignUp\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\SingleMessage\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\index.js",["103","104"],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\MessageBox\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\Footer\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\index.js",["105","106"],"import React, { useState } from \"react\";\nimport ProductOptionsCard from \"./ProductOptionsCard\";\nimport Wrapper from \"./Wrapper\";\nimport { QUERY_SINGLE_CATEGORY } from \"../../utils/queries\";\nimport { useQuery } from \"@apollo/client\";\nimport { useParams } from \"react-router-dom\";\n\nfunction ProductOptions() {\n  const params = useParams();\n  console.log(params);\n\n  const { loading, data } = useQuery(QUERY_SINGLE_CATEGORY, {\n    variables: { categoryId: params.id },\n  });\n  const category = data?.category || [];\n  console.log(category);\n\n  //ICEBOX ITEM >>>>>>>\n  // Create a method 'removeProductOptions()' that takes in 'id' and filters through 'SingleCategoryList'\n  // Update the state with the new productOptions list.\n  // const removeProductOptions = id => {\n  //   const newList = productOptionsList.filter(productOptions => productOptions.id !== id);\n  //   setProductOptionsList(newList);\n  // };\n  //ICEBOX ITEM ^^^^^^^^^\n\n  return (\n    <Wrapper>\n      <h1 className=\"title\">Product Options List</h1>\n      {/* Map through 'category.options' and render a 'ProductOptions Card' for each category */}\n      {/* Pass in the 'removeProductOptions()' method and each property of a productOptions (ICEBOX ITEM)*/}\n      {category.options &&\n        category.options.map((category) => (\n          <ProductOptionsCard\n            id={category.id}\n            key={category.id}\n            name={category.name}\n            size={category.size}\n            price={category.price}\n          />\n        ))}\n    </Wrapper>\n  );\n}\n\nexport default ProductOptions;\n","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\Header\\index.js",["107"],"import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport Auth from '../../utils/auth';\n\n//header component for app\nconst Header = () => {\n  const logout = (event) => {\n    event.preventDefault();\n    Auth.logout();\n  };\n  return (\n    <header className=\"bg-primary text-light mb-4 py-3 flex-row align-center\">\n      <div className=\"d-flex container flex-row justify-space-between-lg justify-center align-center\">\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n            <img className='logo' src='https://media.discordapp.net/attachments/910746818793599028/931348457858433034/CP_new_logo_png.png?width=1440&height=528'></img>\n          </Link> \n        </div>\n        <div>\n          <Link className=\"text-light\" to=\"/\">\n          <h2 className=\"m-0\">Home</h2>\n            </Link>\n        </div>\n        <div>\n          <Link className=\"text-light\" to=\"/products\">\n          <h2 className=\"m-0\">Products</h2>\n            </Link>\n        </div>\n        <div>\n          <Link className=\"text-light\" to=\"/messages\">\n          <h2 className=\"m-0\">Messages</h2>\n            </Link>\n        </div>\n        <div>\n          {Auth.loggedIn() ? (\n            <>\n              <span>Hey there, {Auth.getProfile().data.username}!</span>\n              <button className=\"btn btn-lg btn-light m-2\" onClick={logout}>\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link className=\"btn btn-lg btn-info m-2\" to=\"/login\">\n                Login\n              </Link>\n              <Link className=\"btn btn-lg btn-light m-2\" to=\"/signup\">\n                Signup\n              </Link>\n            </>\n          )}\n        </div>\n      </div>\n    </header>\n  );\n};\n\nexport default Header;\n","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\auth.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\mutations.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\utils\\queries.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\ResponseForm\\index.js",["108"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_RESPONSE } from '../../utils/mutations';\n\nimport Auth from '../../utils/auth';\n\n//This is the responseForm component of the app. This is what will hold the functionality for users to respond to existing messages. Essentially what happens on the \"on click\" of the promped link in mesaage list.//\nconst ResponseForm = ({ messageId }) => {\n  const [responseText, setResponseText] = useState('');\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addResponse, { error }] = useMutation(ADD_RESPONSE);\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addResponse({\n        variables: {\n          messageId,\n          responseText,\n          responseAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setResponseText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'responseText' && value.length <= 1000) {\n      setResponseText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h4>Your message will be sent after clicking 'send'.</h4>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 1000 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/1000\n            {error && <span className=\"ml-2\">{error.message}</span>}\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"replyText\"\n                placeholder=\"Add your response...\"\n                value={responseText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Send\n              </button>\n            </div>\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to send your messages. Please login{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default ResponseForm;\n","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\ProductCard\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\pages\\Products\\Wrapper\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\ResponseList\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\MessageList\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\MessageForm\\index.js",["109"],"import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { useMutation } from '@apollo/client';\n\nimport { ADD_MESSAGE } from '../../utils/mutations';\nimport { QUERY_MESSAGES } from '../../utils/queries';\n\nimport Auth from '../../utils/auth';\nimport \"./style.css\";\n\n//message form component for app. This is where users can type a message and submit//\n\nconst MessageForm = () => {\n  const [messageText, setMessageText] = useState('');\n\n  const [characterCount, setCharacterCount] = useState(0);\n\n  const [addMessage, { error }] = useMutation(ADD_MESSAGE, {\n    update(cache, { data: { addMessage } }) {\n      try {\n        const { messages } = cache.readQuery({ query: QUERY_MESSAGES });\n\n        cache.writeQuery({\n          query: QUERY_MESSAGES,\n          data: { messages: [addMessage, ...messages] },\n        });\n      } catch (e) {\n        console.error(e);\n      }\n    },\n  });\n\n  const handleFormSubmit = async (event) => {\n    event.preventDefault();\n\n    try {\n      const { data } = await addMessage({\n        variables: {\n          messageText,\n          messageAuthor: Auth.getProfile().data.username,\n        },\n      });\n\n      setMessageText('');\n    } catch (err) {\n      console.error(err);\n    }\n  };\n\n  const handleChange = (event) => {\n    const { name, value } = event.target;\n\n    if (name === 'messageText' && value.length <= 700) {\n      setMessageText(value);\n      setCharacterCount(value.length);\n    }\n  };\n\n  return (\n    <div>\n      <h3>What printing or design project can we help you with?</h3>\n\n      {Auth.loggedIn() ? (\n        <>\n          <p\n            className={`m-0 ${\n              characterCount === 700 || error ? 'text-danger' : ''\n            }`}\n          >\n            Character Count: {characterCount}/700\n          </p>\n          <form\n            className=\"flex-row justify-center justify-space-between-md align-center\"\n            onSubmit={handleFormSubmit}\n          >\n            <div className=\"col-12 col-lg-9\">\n              <textarea\n                name=\"messageText\"\n                placeholder=\"Enter message here...\"\n                value={messageText}\n                className=\"form-input w-100\"\n                style={{ lineHeight: '1.5', resize: 'vertical' }}\n                onChange={handleChange}\n              ></textarea>\n            </div>\n\n            <div className=\"col-12 col-lg-3\">\n              <button className=\"btn btn-primary btn-block py-3\" type=\"submit\">\n                Submit Message\n              </button>\n            </div>\n            {error && (\n              <div className=\"col-12 my-3 bg-danger text-white p-3\">\n                {error.message}\n              </div>\n            )}\n          </form>\n        </>\n      ) : (\n        <p>\n          You need to be logged in to send messages. Please{' '}\n          <Link to=\"/login\">login</Link> or <Link to=\"/signup\">signup.</Link>\n        </p>\n      )}\n    </div>\n  );\n};\n\nexport default MessageForm;\n","C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\Wrapper\\index.js",[],"C:\\Users\\Dakota Donaldson\\Desktop\\coding-boot-camp\\Projects\\CrockettPrinting\\client\\src\\components\\SingleCategory\\ProductOptionsCard\\index.js",[],{"ruleId":"110","replacedBy":"111"},{"ruleId":"112","replacedBy":"113"},{"ruleId":"114","severity":1,"message":"115","line":27,"column":7,"nodeType":"116","endLine":27,"endColumn":306},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":9,"column":11,"nodeType":"119","messageId":"120","endLine":9,"endColumn":18},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":25},{"ruleId":"117","severity":1,"message":"121","line":12,"column":11,"nodeType":"119","messageId":"120","endLine":12,"endColumn":18},{"ruleId":"122","severity":1,"message":"123","line":17,"column":13,"nodeType":"116","endLine":17,"endColumn":162},{"ruleId":"117","severity":1,"message":"124","line":20,"column":15,"nodeType":"119","messageId":"120","endLine":20,"endColumn":19},{"ruleId":"117","severity":1,"message":"124","line":37,"column":15,"nodeType":"119","messageId":"120","endLine":37,"endColumn":19},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],"jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'loading' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","'data' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]